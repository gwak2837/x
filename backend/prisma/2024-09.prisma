datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               BigInt    @id @default(autoincrement())
  createdAt        DateTime  @default(now())
  updatedAt        DateTime? @updatedAt
  logoutAt         DateTime?
  suspendedAt      DateTime?
  unsuspendAt      DateTime?
  suspendedType    Int?      @db.SmallInt
  suspendedReason  String?
  ageRange         Int       @db.SmallInt
  ageRangePublic   Boolean   @default(true)
  bio              String?   @db.VarChar(255)
  birthDate        DateTime? @db.Date
  birthDatePublic  Boolean   @default(true)
  config           Json?
  grade            Int       @default(0) @db.SmallInt
  isPrivate        Boolean   @default(false)
  likedPostPublic  Boolean   @default(true)
  name             String    @unique @db.VarChar(255)
  nameLastModified DateTime?
  nickname         String    @db.VarChar(255)
  profileImageURLs String[]
  sex              Int       @default(0) @db.SmallInt
  sexPublic        Boolean   @default(true)

  mangas UserBookmarkManga[] @relation("mangas")
  OAuth  OAuth[]
}

model OAuth {
  id              String
  provider        Int      @default(0) @db.SmallInt
  createdAt       DateTime @default(now())
  email           String?  @db.VarChar(255)
  profileImageURL String?

  userId BigInt?

  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)

  @@id([id, provider])
  @@index([userId])
}

model Manga {
  id         BigInt   @id
  publishAt  DateTime
  type       Int      @db.SmallInt
  title      String
  imageCount Int      @default(0) @db.SmallInt

  mangaInfos MangaMangaInfo[]    @relation("mangaInfos")
  users      UserBookmarkManga[] @relation("users")

  @@index([title])
}

model UserBookmarkManga {
  userId  BigInt
  mangaId BigInt

  user  User  @relation("mangas", fields: [userId], references: [id])
  manga Manga @relation("users", fields: [mangaId], references: [id])

  @@id([userId, mangaId])
}

model MangaInfo {
  id   BigInt @id @default(autoincrement())
  type Int    @db.SmallInt
  name String

  mangas MangaMangaInfo[] @relation("mangas")

  @@unique([type, name])
}

model MangaMangaInfo {
  mangaId     BigInt
  mangaInfoId BigInt

  manga     Manga     @relation("mangaInfos", fields: [mangaId], references: [id])
  mangaInfo MangaInfo @relation("mangas", fields: [mangaInfoId], references: [id])

  @@id([mangaId, mangaInfoId])
}
